* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  
  body {
    font-family: Poppins;
    background-color: #212121;
    color: #a09fa4;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 2rem;
    overflow: hidden;
    /* cursor: url('popcorn-svgrepo-com.svg'), auto; */
  }
  
  h1{
    text-align:center;
    font-size: 55px;
    opacity: 0;
    animation: fadeIn 2s forwards, shrinkMoveUp 2.5s ; /*Combined shrinking and moving up*/
    background: linear-gradient(90deg, red, blue);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    -webkit-text-stroke: 0.1vw #383d52;
    background-clip: text;
    color: transparent;
  }

  @keyframes fadeIn {
    0% {
      opacity: 0;
      transform: translateY(0);  /*Added to reset translateY */
    }
    100% {
      opacity: 1;
      transform: translateY(0); /*Added to reset translateY */
    }
  }
  
  @keyframes shrinkMoveUp {
    0% {
      transform: translateY(40px);
      font-size: 65px;
    }
    100% {
      transform: translateY(0px);  /*Move up to top of the page */
      font-size: 55px; /* Reduced size after moving up */
    }
  }

  .container {
    width: 100%;
    max-width: 46rem;
    background-color: white;
    border-radius: 15px;
    margin: 0 auto;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    opacity: 0; /*initial opacity set to 0*/
    animation: fadeIn 5s forwards; /* Animation for the container */
    box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.2); /* Added box shadow */
    border: 1px solid black;
  }
  
  @keyframes fadeInContainer {
    0% {
      opacity: 0;
      transform: translateY(80px);
    }
    100% {
      opacity: 1;
      transform: translateY(0px);
    }
  }

  textarea {
    resize: none;
    width: 100%;
    height: 250px;
    padding: 1rem;
    color: #242e3e;
    font: inherit;
    font-size: 1rem;
    border-radius: inherit;
    outline: none;
    border: 0;
  }

  /* ::selection {
    background-color: #000000;
    Black background color
    color: #ffffff; 
    White text color
  } */
  
  .output-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 3.5rem;
    padding: 1rem;
    border-top: 1px solid gray;
  }
  
  .output {
    display: flex;
    flex-direction: column;
    text-align: center;
  }
  
  .output p {
    font-size: 0.8rem;
    text-transform: uppercase;
    letter-spacing: 1px;
  }
  
  .output span {
    font-size: 1.6rem;
    font-weight: 700;
    color: #242e3e;
  }

  .bubbles{
    position:relative;
    width: 100%;
    display:flex;
    flex-wrap: wrap; /* Allow the bubbles to wrap to the next line */
    justify-content: space-between; /* Distribute bubbles evenly across the width */
    z-index: -1; /* Send bubbles to the back */
  }
  .bubbles span{
    position:relative;
    width:30px;
    height: 30px;
    background: #4fc3dc;
    margin: 0 4px;
    border-radius: 50%;
    box-shadow: 0 0 0 10px #4fc3dc44,
    0 0 50px #4fc3dc,
    0 0 100px #4fc3dc;
    animation: animate 15s linear infinite;
    animation-duration: calc(125s / var(--i));
  }

  .bubbles span:nth-child(even){
    background: #ff2d75;
    box-shadow: 0 0 0 10px #ff2d7544,
    0 0 50px #ff2d75,
    0 0 100px #ff2d75;
  }

  @keyframes animate{
    0%{
        transform: translateY(100vh) scale(0);
    }
    100%{
        transform: translateY(-110vh) scale(1);
    }
  }

  label {
    width: 100px; /* Adjusted the width to better fit the toggle */
    height: 50px; /* Adjusted the height to better fit the toggle */
    position: relative;
    display: block;
    background: #ebebeb;
    border-radius: 50px; /* Adjusted to make it circular */
    box-shadow: inset 0px 5px 15px rgba(0,0,0,0.4), inset 0px -5px 15px rgba(255,255,255,0.4);
    cursor: pointer;
    overflow: hidden; /* Ensure icons don't overflow */
}


label:after {
    content: "";
    width: 40px; /* Adjusted the size to fit within the toggle */
    height: 40px; /* Adjusted the size to fit within the toggle */
    position: absolute;
    top: 5px; /* Centered vertically */
    left: 5px; /* Centered initially */
    background: linear-gradient(180deg, #ffcc89, #d8860b);
    border-radius: 50%; /* Make it circular */
    box-shadow: 0px 5px 10px rgba(0,0,0,0.2);
    transition: 0.3s; /* Smooth transition */
}
input {
    width: 0;
    height: 0;
    visibility: hidden;
}

input:checked + label {
    background: #242424;
}
input:checked + label:after {
    left: 55px; /* Move to the other side when checked */
    background: linear-gradient(180deg, #777, #3a3a3a);
}
label, label:after {
    transition: 0.3s
}

label:active:after{ 
    width: 45px; 
}

.background {
    width:100vw;
    height: 100vh;
    background: #ebe9b2;
    z-index: -1;
    position: absolute;
    transition: 0.3s;
}

input:checked + label + .background {
    background:#242424;
}

label svg {
    position: absolute;
    width: 24px; /* Adjusted the size to fit within the toggle */
    height: 24px; /* Adjusted the size to fit within the toggle */
    top: 13px; /* Centered vertically */
    z-index: 100;
}
  
label svg.sun {
    left: 15px; /* Adjust the left position to place it correctly */
    fill: #fff;
    transition: 0.3s;
}
  
label svg.moon {
    right: 15px; /* Use right position instead of left for better alignment */
    fill: #7e7e7e;
    transition: 0.3s;
}
  
input:checked + label svg.sun {
    fill: #7e7e7e;
}
  
input:checked + label svg.moon {
    fill: #fff;
}
  
#darkmode-toggle,
label[for="darkmode-toggle"] {
    position: fixed;
    bottom: 20px; /* Adjust the distance from the bottom */
    right: 20px; /* Adjust the distance from the right */
    z-index: 1000; /* Ensure it stays on top */
}

label[for="darkmode-toggle"] {
    cursor: pointer;
}